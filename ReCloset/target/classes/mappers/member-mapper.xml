<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member-mapper">


 <!-- 회원가입 --> 
   <insert id="insertMember" parameterType="Member">
      INSERT INTO MEMBER
      VALUES (SEQ_MEM.NEXTVAL, DEFAULT, #{userId}, #{userPwd}, #{userName}, #{birthday}, 
            #{zip}, #{address1}, #{address2}, #{phone}, #{email}, #{gender}, #{marketname}, #{bank},
            #{atholder}, #{anumber}, DEFAULT)
   </insert>
   
   <!-- 로그인 -->
   <select id="selectOneMember" parameterType="Member" resultType="Member">
      SELECT * FROM MEMBER 
      WHERE USERID = #{userId} 
   </select>
   
   <!-- 회원정보보기 -->
   <select id="selectMemberView" parameterType="string" resultType="Member">
      SELECT * FROM MEMBER
      WHERE USERID = #{userId}
   </select>
  
   <!-- 회원정보수정 -->
   <update id="updateMember" parameterType="Member">
      UPDATE MEMBER
      <set>
         <if test="userName != null">
            USERNAME = #{userName},
         </if>
         <if test="email != null">
            EMAIL = #{email},
         </if>
         <if test="password != null">
            USERPASSWORD = #{userPwd},
       </if>
      </set>
      WHERE USERID = #{userId}
   </update>
   
   <!-- 회원탈퇴 -->
   <delete id="deleteMember" parameterType="string">
      DELETE FROM MEMBER
      WHERE USERID = #{userId}
   </delete>
   
   <!-- ID 중복체크 -->
   <select id="checkIdDuplicate" parameterType="String" resultType="int">
   <!-- CALLABLE Statement는 일반 Statement, PreparedStatement와는 다르게 프로시져(PL/SQL)를
            호출하는 전용 실행 문법이다. -->
   <!-- CallableStatement 는 { } 로 묶어 실행하며,
           시작 괄호 '{' 다음에 Tab을 사용할 경우 값을 읽지 못한다. -->
    SELECT COUNT(*) FROM MEMBER WHERE USERID=#{userId}
   </select>
   
</mapper>








